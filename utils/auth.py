import time, json
import streamlit as st

try:
    from streamlit_cookies_manager import EncryptedCookieManager
except Exception:
    EncryptedCookieManager = None


def auth_gate() -> bool:
    """
    Affiche un √©cran d'accueil demandant un mot de passe.
    Si "Se souvenir 30 jours" est coch√©, stocke un cookie chiffr√© c√¥t√© navigateur.
    Retourne True si l'acc√®s est autoris√©, sinon False.
    """

    APP_PASSWORD = st.secrets.get("APP_PASSWORD", "demo1234")
    COOKIE_KEY = st.secrets.get("COOKIE_KEY", "change-this-cookie-key")
    COOKIE_NAME = "dpe_auth_v1"
    MAX_AGE_SEC = 30 * 24 * 3600  # 30 jours

    cookies_ok = EncryptedCookieManager is not None
    cookies = None

    if cookies_ok:
        cookies = EncryptedCookieManager(prefix="dpe_app", password=COOKIE_KEY)
        # Attente explicite jusqu‚Äô√† ce que les cookies soient pr√™ts
        if not cookies.ready:
            st.warning("‚è≥ Initialisation du gestionnaire de cookies... Veuillez patienter une seconde.")
            time.sleep(1)
            st.rerun()

    # V√©rifie si un cookie d'acc√®s est d√©j√† pr√©sent
    if cookies_ok and cookies:
        raw = cookies.get(COOKIE_NAME)
        if raw:
            try:
                data = json.loads(raw)
                exp = float(data.get("exp", 0))
                if exp > time.time():
                    return True  # acc√®s d√©j√† autoris√©
            except Exception:
                pass  # cookie invalide, on continue

    # --- Formulaire de mot de passe ---
    st.markdown("## üîê Acc√®s prot√©g√©")
    st.write("Cet outil n√©cessite un mot de passe pour continuer.")
    with st.form("auth_form", clear_on_submit=False):
        pwd = st.text_input("Mot de passe", type="password")
        remember = st.checkbox("Se souvenir pendant 30 jours", value=True)
        submitted = st.form_submit_button("Entrer")

    if submitted:
        if pwd == APP_PASSWORD:
            # Cr√©ation du cookie si demand√©
            if cookies_ok and remember and cookies:
                payload = {"exp": time.time() + MAX_AGE_SEC}
                cookies.set(COOKIE_NAME, json.dumps(payload), max_age=MAX_AGE_SEC)
                cookies.save()
            st.session_state["_auth_ok"] = True
            st.success("Acc√®s autoris√© ‚úÖ")
            st.rerun()
        else:
            st.error("Mot de passe incorrect.")

    return bool(st.session_state.get("_auth_ok", False))
